function sum(a, b) {
    return a + b;
  }  
alert(`1 + 2 = ${sum(1, 2)}.`); // 1 + 2 = 3. (백틱으로 문자열 안에 표현식 넣기)

let str1 = "Hello\nWorld";
let str2 = `Hello
World`;

alert(str1 == str2); //true

//------------------------------------------------------------------------------------------------------------------------------------------
"\', \", \\" //문자열 속 특수 문자
alert("I\'m the king");
alert(`I'm the king`); //위와 같은 출력

//------------------------------------------------------------------------------------------------------------------------------------------
for(let str of "Hello") {
    alert(str);   //H,e,l,l,o 각각 순차적으로 출력
}

//------------------------------------------------------------------------------------------------------------------------------------------
//문자열은 수정이 불가능함. 따라서 완전히 새로운 문자열을 만들고 할당해야함
let str = 'Hi';
str = 'h' + str[1]; // 문자열 전체를 교체함
alert(str); // hi

//------------------------------------------------------------------------------------------------------------------------------------------
alert('gosmain'.toUpperCase()); // GOSMAIN
alert('gosmain'.toLowerCase()); // gosmain

//------------------------------------------------------------------------------------------------------------------------------------------
// 부분 문자열 찾기
indexof(); //부분 문자열의 위치
includes(), startsWith(),endsWith(); //부분 문자열의 존재여부

let str = 'Widget with id';

alert(str.indexOf('Widget')); // 0, str은 'Widget'으로 시작
alert(str.indexOf('widget')); // -1, indexOf는 대·소문자를 따지므로 원하는 문자열을 찾지 못함
alert(str.indexOf("id"));     // 1, "id"는 첫 번째 위치에서 발견됨 (W"id"get의 id)

// 부분 문자열 추출
slice(start, end); // start부터 end까지(end는 미포함)

let str = "gosmain";
alert(str.slice(0, 5)); // 'gosma'

//------------------------------------------------------------------------------------------------------------------------------------------
str.trim(); //문자열 앞과 끝의 공백 문자를 제거
str.repeat(n); //문자열을 n번 반복

